import os
import logging
from datetime import datetime
from zoneinfo import ZoneInfo
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.filters import CommandStart, Command
from aiogram.client.default import DefaultBotProperties
from aiogram.exceptions import TelegramBadRequest

load_dotenv()
TOKEN = os.getenv("GEOCODE_BOT_TOKEN") or os.getenv("BOT_TOKEN")
if not TOKEN:
    raise SystemExit("‚ùå BOT_TOKEN topilmadi (.env ichiga GEOCODE_BOT_TOKEN=...).")

bot = Bot(TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

def fmt_coord(lat: float, lon: float) -> str:
    return f"{lat:.6f}, {lon:.6f}"

def now_tashkent_str() -> str:
    try:
        return datetime.now(ZoneInfo("Asia/Tashkent")).strftime("%H:%M")
    except Exception:
        return datetime.now().strftime("%H:%M")

@dp.message(CommandStart())
async def start(message: Message):
    await message.answer(
        "üëã –°–∞–ª–æ–º! –ì–µ–æ–∫–æ–¥-–±–æ—Ç —Ç–∞–π—ë—Ä.\n"
        "üìç –õ–æ–∫–∞—Ü–∏—è —é–±–æ—Ä–∏–Ω–≥ ‚Äî –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–Ω–∏ –º–∞—Ç–Ω “õ–∏–ª–∏–± “õ–∞–π—Ç–∞—Ä–∞–º–∞–Ω."
    )

@dp.message(Command("help"))
async def help_cmd(message: Message):
    await message.answer("‚ÑπÔ∏è –û–¥–¥–∏–π: —á–∞—Ç–≥–∞ Location —é–±–æ—Ä–∏–Ω–≥. –ú–µ–Ω —ç—Å–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–Ω–∏ –º–∞—Ç–Ω –∫—û—Ä–∏–Ω–∏—à–∏–¥–∞ –∂—û–Ω–∞—Ç–∞–º–∞–Ω.")

@dp.message(F.location)
async def handle_location(message: Message):
    lat = message.location.latitude
    lon = message.location.longitude
    coords = fmt_coord(lat, lon)  # "38.859555, 65.796147"

    text = (
        "üìç <b>–ú–∏–∂–æ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–ª–∞—Ä–∏:</b>\n\n"
        f"<code>{coords}</code>\n"
    )

    # reply() ‚Üí answer() fallback (—ç—Å–∫–∏ –ª–æ–π–∏“≥–∞–Ω–≥–∏–∑–¥–∞–≥–∏ –∫–∞–±–∏)
    try:
        await message.reply(text)
    except TelegramBadRequest:
        await message.answer(text)